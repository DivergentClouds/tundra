==========
= Tundra =
==========


Assembly
========

Instruction Format
------------------
Instructions are composed of an opcode and 2 registers, the second of which may
be dereferenced. To dereference a register, prefix it with an asterisk.

Registers
---------
There are 7 16-bit registers, 4 of which are accessible at a time. The
A, B, and C register ids refer to general purpose registers. Each general
purpose register id can refer to 1 of 2 registers. By default they refer to
primary registers. To switch to a secondary register, use the AND instruction
with the same general purpose register id as both arguments. To switch back to a
primary register, use the MOV instruction with the same register id as both
arguments.

  A
  B
  C
  PC

Dereferenced Registers
----------------------
Dereferencing a register will read the little-endian value from memory at the
address contained in the register. Dereferencing the program counter will read
the 16-bit value in memory after the current instruction and then skip past it.
For details, see cpu.txt.

  *A
  *B
  *C
  *PC

Instructions
------------
|===============|==============================================|
| Instruction   | Effect                                       |
|===============|==============================================|
| MOV dest, src | set dest to src. if dest is the same         |
|               | register as src, switch that register id to  |
|               | refer to the matching primary register       |
|---------------|----------------------------------------------|
| STO dest, src | store src at memory[dest]                    |
|---------------|----------------------------------------------|
| ADD dest, src | set dest to dest + src, wrapping on overflow |
|---------------|----------------------------------------------|
| CMP dest, src | if dest > src (signed), ignore the next      |
|               | attempt to modify PC, otherwise, allow it    |
|---------------|----------------------------------------------|
| ROT dest, src | set dest to dest rotated by src bits, if src |
|               | is positive, then rotate left, otherwise     |
|               | rotate right                                 |
|---------------|----------------------------------------------|
| AND dest, src | set dest to dest & src. if dest is the same  |
|               | register as src, switch that register id to  |
|               | refer to the matching secondary register     |
|---------------|----------------------------------------------|
| NOR dest, src | set dest to ~(dest | src)                    |
|---------------|----------------------------------------------|
| XOR dest, src | set dest to dest ^ src                       |
|---------------|----------------------------------------------|

Assembling
----------
To assemble a Tundra program, use fasmg (https://flatassembler.net/) and
include either 'tundra-core.inc' or 'tundra-extra.inc' (which includes
tundra-core) at the top of the file. Instructions, constants, and macros are
not case-sensitive. Semicolons start line comments.

Tundra-Core
-----------
tundra-core.inc includes the instruction set along with macros that treat src as
an immediate. To use them, suffix an instruction name with 'I'. For example,

  MOVI A, -1

is equivalent to:

  MOV A, *PC
  dw 0xFFFF

Tundra-Extra
------------
tundra-extra.inc contains helpful macros and constants. For more information,
see macros.txt and constants.txt.

