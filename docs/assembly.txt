==========
= Tundra =
==========


Assembly
========

Instruction Format
------------------
Instructions are composed of an opcode and 2 registers, the second of which may
be dereferenced. There are 4 16-bit registers, the first 3 of which are general
purpose. To dereference a register, prefix it with an asterisk. Dereferencing a
register will read the little-endian value from memory at the address contained
in the register. Dereferencing the program counter will read the value after the
current instruction

Dereferencing a register will read the little-endian 16-bit value from memory at
the address contained in the register. Dereferencing the program counter will
read the 16-bit value in memory after the current instruction and then skip past
it. For details, see cpu.txt.

Registers
---------
A
B
C
PC

Dereferenced Registers
----------------------
*A
*B
*C
*PC

Instructions
------------
|===============|==============================================|
| Instruction   | Effect                                       |
|===============|==============================================|
| MOV dest, src | set dest to src                              |
|---------------|----------------------------------------------|
| STO dest, src | store src at memory[dest]                    |
|---------------|----------------------------------------------|
| ADD dest, src | set dest to dest + src, wrapping on overflow |
|---------------|----------------------------------------------|
| CMP dest, src | if dest > src (signed), ignore the next      |
|               | attempt to modify PC, otherwise, allow it    |
|---------------|----------------------------------------------|
| ROT dest, src | set dest to dest rotated by src bits, if src |
|               | is negative, then rotate left, otherwise     |
|               | rotate right                                 |
|---------------|----------------------------------------------|
| AND dest, src | set dest to dest & src                       |
|---------------|----------------------------------------------|
| NOR dest, src | set dest to ~(dest | src)                    |
|---------------|----------------------------------------------|
| XOR dest, src | set dest to dest ^ src                       |
|---------------|----------------------------------------------|

Assembling
----------
To assemble a Tundra program, use fasmg (https://flatassembler.net/) and
include either 'tundra-core.inc' or 'tundra-extra.inc' (which includes
tundra-core) at the top of your file. Instructions, constants, and macros are
not case-sensitive. Semicolons start line comments.

Tundra-Core
-----------
tundra-core.inc includes the instruction set along with macros that treat src as
an immediate. To use them, suffix an instruction name with 'I'. For example,

  MOVI A, -1

is equivalent to:

  MOV A, *PC
  dw 0xFFFF

Tundra-Extra
------------
tundra-extra.inc contains helpful macros and constants. For more information,
see macros.txt and constants.txt.

